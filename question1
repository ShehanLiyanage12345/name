#include <iostream>
using namespace std;

#define MAX_SIZE 100 // Maximum size of the Stack

class Stack {
private:
    int arr[MAX_SIZE]; // Array to store the Stack
    int top; // Index of the top element of the Stack

public:
    // Constructor to initialize the Stack
    Stack() {
        top = -1;
    }

    // Push function to add an element to the Stack
    void push(int value) {
        if (top >= MAX_SIZE - 1) {
            cout << "Stack Overflow" << endl;
            return;
        }
        arr[++top] = value;
    }

    // Pop function to remove the top element from the Stack
    int pop() {
        if (is_empty()) {
            cout << "Stack Underflow" << endl;
            return -1;
        }
        return arr[top--];
    }

    // Function to check if the Stack is empty or not
    bool is_empty() {
        return top < 0;
    }

    // Function to get the size of the Stack
    int size() {
        return top + 1;
    }
};

int main() {
    Stack s;
    s.push(10);
    s.push(20);
    s.push(30);
    cout << "Size of Stack: " << s.size() << endl;
    cout << "Top Element: " << s.peek() << endl;
    cout << "Popped Element: " << s.pop() << endl;
    cout << "Top Element: " << s.peek() << endl;
    cout << "Popped Element: " << s.pop() << endl;
    cout << "Popped Element: " << s.pop() << endl;
    cout << "Is Stack Empty? " << s.is_empty() << endl;
    return 0;
}
